name: App TASK MANAGER
run-name: ${{ github.actor }} is deploy App task manager 🚀
on:
  push:
    branches: [feature/HU**, fix/FIX**]

jobs:
  test-app:
    name: Correr-test
    if:  ${{ contains(github.event.head_commit.message, 'develop') }}
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}

    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: postgres test
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          database: db_task_manager

      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Instalación de app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Correr pruebas app
        id: correr-pruebas
        if: ${{ contains(github.event.head_commit.message, 'develop') }}
        run: |
          python manage.py makemigrations
          python manage.py migrate
          coverage run manage.py test
          coverage report -m
          coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Validar resultado con errores
        if: ${{ failure() }}
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"


  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: everlytic/branch-merge@1.1.2
        with:
          github_token: ${{ github.token }}
          source_ref: ${{ github.ref }}
          target_branch: 'develop'
          commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}'


  codecov:
    name: upload coverage codecov
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: postgres test
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          database: db_task_manager
      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Instalación de app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Correr pruebas app
        id: correr-pruebas
        run: |
          python manage.py makemigrations
          python manage.py migrate
          coverage run manage.py test
          coverage report -m
          coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}